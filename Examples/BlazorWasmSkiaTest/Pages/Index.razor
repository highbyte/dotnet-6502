@page "/"
@using SkiaSharp
@using SkiaSharp.Views.Blazor
@*@implements IDisposable*@

<PageTitle>Blazor Wasm Skia Test</PageTitle>

@*Inject JS to be able to set focus on SKGLView from code*@
@inject IJSRuntime Js

@*Skia OpenGl View Blazor WASM component*@
<SKGLView class="skGLViewStyle"
          IgnorePixelScaling="true"
          EnableRenderLoop="true"
          OnPaintSurface="OnPaintSurface"
          id="emulatorSKGLView"
          tabindex="0"
          oncontextmenu="return false;"
          @onkeypress="OnKeyPress"
          @onkeydown="OnKeyDown"
          @onkeyup="OnKeyUp" />

<style>
    .skGLViewStyle {
        position: relative;
        left: 0px;
        top: 0px;
        width: @_windowWidthStyle;
        height: @_windowHeightStyle;
        overflow: hidden;
    }
</style>

<div class="px-4">
    @_statsString
</div>
<p></p>
<div class="px-4">
    @_debugString
</div>
<p></p>


@code
{
    protected override async void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            await Js.InvokeVoidAsync("focusElement", "emulatorSKGLView");
        }
    }

    private void OnKeyPress(KeyboardEventArgs e)
    {
        if (_wasmHost == null)
            return;
        _wasmHost.InputHandlerContext.KeyPress(e);

    }

    private void OnKeyDown(KeyboardEventArgs e)
    {
        if (_wasmHost == null)
            return;
        _wasmHost.InputHandlerContext.KeyDown(e);
    }

    private void OnKeyUp(KeyboardEventArgs e)
    {
        if (_wasmHost == null)
            return;
        _wasmHost.InputHandlerContext.KeyUp(e);
    }

    //private void OnPointerDown(PointerEventArgs e)
    //{
    //}

    //private void OnPointerMove(PointerEventArgs e)
    //{
    //}

    //private void OnPointerUp(PointerEventArgs e)
    //{
    //}

    //private void OnTouchMove(TouchEventArgs e)
    //{
    //}

    //private void OnMouseWheel(WheelEventArgs e)
    //{
    //}
}
